= ar_extractor

* http://github.com/abikounso/ar_extractor/tree/master
* http://d.hatena.ne.jp/abikounso/

== DESCRIPTION

DBのデータを、YAML形式で出力するRailsプラグイン。

== FEATURES

* DBのデータをYAMLに変換して、出力。

  * 内部でto_yamlメソッドを使用していないため、UTF-8の文字列も問題なく扱える。
  * カラムの表示順が、スキーマのそれと同じなので、見やすい。
  * テーブル名・カラム名を、別の名前に変換して出力することも可能。

* テスト用のダミーデータを自動生成。


== SYNOPSIS

=== DB => YAML出力

全てのテーブルのデータをYAMLに出力。
  
  $ rake db:fixtures:extract

FIXTURESにテーブル名を指定すると、そのテーブルのデータだけが出力される。
  
  $ rake db:fixtures:extract FIXTURES=users,cliets
  
テーブル名、カラム名を別の名前に変換して出力。
  
  # 最初に、config/tables.ymlというファイルを作成し、下記のように記述する。
  cum_kanyosaki(現在のテーブル名):
    companies(新しいテーブル名):
      kanyosaki_id(現在のカラム名): id(新しいカラム名)
      kanyosaki_cd: code
      kanyosaki_official_name: name
      kanyosaki_url: url
      gyosyu_cd: category_id
      kanyo_kaikei_getuji_flg: engagement_type

必ず引数をセットすること

  $ rake db:fixtures:convert DB=foo

=== DBのスキーマを解析して、ダミーデータを自動生成

事前に、populatorとfakerをインストールしておく。
  
  $ gem install populator faker  
  $ ruby script/generate ar_extractor
   
で、
  
  lib/tasks/population.rake
  
が生成される。

population.rakeの中身は、こんな感じ。

  namespace :db do
    desc "Erase and fill database"
    task :populate => :environment do
      require "populator"
      require "faker"

      [Accounting, Bank].each(&:delete_all)
      
      Accounting.populate 20 do |column|
        column.fiscal_year = 1900..Time.now.year
        column.net_operating_profit = 1..10000
        column.depreciation = 1..10000
        column.amount_repaid = 1..10000
        column.client_id = 1..20
      end

      Bank.populate 20 do |column|
        column.name = Faker::Name.name
      end

    end
  end

あとは、
  
  rake db:populate
  
で、ダミー用のデータがDBに格納される。


== REQUIREMENTS:

* Rails 2.2以上
* populator(generatorを使用する場合)
* faker    (generatorを使用する場合)

== INSTALL:

  $ ruby script/plugin install git://github.com/dchelimsky/rspec.git
